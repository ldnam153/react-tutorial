{"version":3,"sources":["components/Square.js","components/Board.js","helper.js","index.js"],"names":["Square","color","this","props","value","highLight","style","background","className","onClick","char","React","Component","Board","i","j","board","numRow","numCol","res","row","push","renderRow","map","item","index","col","renderSquare","renderBoard","calculateWinner","minI","minJ","k","error","checkMaindiagonal","maxJ","checkSubDiagonal","checkVertical","checkHorizontal","Game","state","Array","fill","history","step","xIsNext","ended","current","asc","resultMessage","length","splice","slice","unshift","setState","forEach","e","curMove","sort","a","b","curPlayer","moves","move","desc","display","padding","width","jumpTo","marginBottom","fontSize","alignSelf","handleClick","justifyContent","fontWeight","type","id","checked","name","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68168873.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\nclass Square extends React.Component {\r\n    render() {\r\n        const color = this.props.value.highLight ? 'red' : 'white'\r\n      return (\r\n        <button style={{background: color}} className=\"square\" onClick = {this.props.onClick}>\r\n          {this.props.value.char}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\nexport default Square;","import React from 'react';\r\nimport '../index.css';\r\nimport Square from './Square';\r\nclass Board extends React.Component {\r\n    \r\n    renderSquare(i, j) {\r\n      return <Square \r\n                i = {i}\r\n                j = {j}\r\n                key={i+j}\r\n                onClick = {()=>this.props.onClick(i, j)} \r\n                value={this.props.board[i][j]}\r\n            />;\r\n    }\r\n    renderBoard(numRow, numCol){\r\n        const res = []\r\n        for(var row = 0; row < numRow; row++)\r\n            res.push(this.renderRow(row, numCol))\r\n        return (\r\n            <div>\r\n                 {res.map((item, index) => (item))}\r\n            </div>\r\n        )\r\n    }\r\n    renderRow(row, numCol){\r\n        const res = []\r\n        for(var col = 0; col < numCol; col++) {\r\n            res.push(this.renderSquare(row, col));\r\n        }\r\n        return (\r\n            <div className=\"board-row\" key={row}>\r\n                {res.map((item, index) => (item))}\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        const row = this.props.row;\r\n        const col = this.props.col;\r\n        //const status = 'Next player: X';\r\n    \r\n        return (\r\n            <div>\r\n                {this.renderBoard(row, col)}\r\n            </div>\r\n            \r\n      );\r\n    }\r\n  }\r\nexport default Board;","const checkMaindiagonal = (board, i, j, char) =>{\r\n    const minI = i - 4;\r\n    const minJ = j - 4;\r\n    for(var k = 0; k < 5; k++){\r\n        try{\r\n            if (board[minI+k][minJ+k].char === char &&\r\n                board[minI+k+1][minJ+k+1].char === char &&\r\n                board[minI+k+2][minJ+k+2].char === char &&\r\n                board[minI+k+3][minJ+k+3].char === char &&\r\n                board[minI+k+4][minJ+k+4].char === char)\r\n            return [\r\n                {i: minI+k,j: minJ+k},\r\n                {i: minI+k+1,j: minJ+k+1},\r\n                {i: minI+k+2,j: minJ+k+2},\r\n                {i: minI+k+3,j: minJ+k+3},\r\n                {i: minI+k+4,j: minJ+k+4},\r\n            ];\r\n        }\r\n        catch (error){\r\n             \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst checkSubDiagonal = (board, i, j, char) =>{\r\n    const minI = i - 4;\r\n    const maxJ = j + 4;\r\n    for(var k = 0; k < 5; k++){\r\n        try{\r\n            if (board[minI+k][maxJ-k].char === char &&\r\n                board[minI+k+1][maxJ-k-1].char === char &&\r\n                board[minI+k+2][maxJ-k-2].char === char &&\r\n                board[minI+k+3][maxJ-k-3].char === char &&\r\n                board[minI+k+4][maxJ-k-4].char === char)\r\n            return [\r\n                {i: minI+k,j: maxJ-k},\r\n                {i: minI+k+1,j: maxJ-k-1},\r\n                {i: minI+k+2,j: maxJ-k-2},\r\n                {i: minI+k+3,j: maxJ-k-3},\r\n                {i: minI+k+4,j: maxJ-k-4},\r\n            ];\r\n        }\r\n        catch (error){\r\n             \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst checkVertical = (board, i, j, char) =>{\r\n    const minI = i - 4;\r\n    for(var k = minI; k < minI + 5; k++){\r\n        try{\r\n            if (board[k][j].char === char &&\r\n                board[k+1][j].char === char &&\r\n                board[k+2][j].char === char &&\r\n                board[k+3][j].char === char &&\r\n                board[k+4][j].char === char)\r\n            return [\r\n                {i: k,j: j},\r\n                {i: k+1,j: j},\r\n                {i: k+2,j: j},\r\n                {i: k+3,j: j},\r\n                {i: k+4,j: j},\r\n            ];\r\n        }\r\n        catch (error){\r\n             \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst checkHorizontal = (board, i, j, char) =>{\r\n    const minJ = j - 4;\r\n   \r\n    for(var k = minJ; k < minJ + 5; k++){\r\n        try{\r\n            if (board[i][k].char === char && \r\n                board[i][k+1].char === char && \r\n                board[i][k+2].char === char &&\r\n                board[i][k+3].char === char &&\r\n                board[i][k+4].char === char)\r\n            return [\r\n                {i,j: k},\r\n                {i,j: k+1},\r\n                {i,j: k+2},\r\n                {i,j: k+3},\r\n                {i,j: k+4},\r\n            ];\r\n        }\r\n        catch (error){\r\n             \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst calculateWinner = (board, i, j, char) =>{\r\n    return(checkMaindiagonal(board, i, j, char)\r\n            || checkSubDiagonal(board, i, j, char)\r\n            || checkVertical(board, i, j, char)\r\n            || checkHorizontal(board, i, j, char));\r\n    \r\n}\r\nexport default calculateWinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Board from './components/Board';\r\nimport calculateWinner from './helper';\r\n\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    const row = 20;\r\n    const col = 20;\r\n    this.state = {\r\n      row,\r\n      col,\r\n      board: new Array(row).fill({char: null, highLight: false}).map(() => new Array(col).fill({char: null, highLight: false})),\r\n     \r\n      history: [{step: 0,i: 0, j: 0, char: {char: null, highLight: false}, xIsNext: true}],\r\n      ended: false,\r\n      current: 0,\r\n      asc: true,\r\n      resultMessage: \"\",\r\n\r\n    }\r\n   \r\n  }\r\n  \r\n  handleClick(i, j) {\r\n    if (this.state.ended)\r\n      return;\r\n    const board = this.state.board; \r\n    if (board[i][j].char!=null)\r\n      return;\r\n    var history = this.state.history;\r\n    var current = this.state.current;\r\n    var xIsNext = history[current].xIsNext;\r\n    if (!this.state.asc)\r\n      xIsNext = history[history.length-1 - current].xIsNext;\r\n    const char = xIsNext ? {char: \"X\", highLight: false} : {char: \"O\", highLight: false};\r\n    board[i][j] = char;\r\n    for(var k = history.length - 1; k >=0; k--)\r\n      if (history[k].step > current)\r\n        history.splice(k, 1);\r\n    history = history.slice(0, current + 1);\r\n    current++;\r\n    if (this.state.asc)\r\n      history.push({step: current,i, j, char, xIsNext: !xIsNext});\r\n    else\r\n      history.unshift({step: current,i, j, char, xIsNext: !xIsNext});\r\n   \r\n    this.setState({\r\n      \r\n    })\r\n    const res = calculateWinner(board, i, j, char.char) \r\n    if (res != null)\r\n      {\r\n        \r\n        res.forEach(e => {\r\n          board[e.i][e.j].highLight = true;\r\n        });\r\n        this.setState({\r\n          ended: true, \r\n          board, \r\n          history,\r\n          current,\r\n          resultMessage: \"Winner: Player \" + char.char,\r\n        });\r\n      }\r\n    else{\r\n        if (history.length-1 >= this.state.row * this.state.col)\r\n        {\r\n          this.setState({\r\n            ended: false, \r\n            board, \r\n            history,\r\n            current,\r\n            resultMessage: \"Draw game\",\r\n          });\r\n        }\r\n        else\r\n          this.setState({\r\n            ended: false, \r\n            board, \r\n            history,\r\n            current,\r\n            resultMessage: \"\",\r\n          });\r\n    }\r\n    \r\n  }\r\n  jumpTo(step){\r\n    if (step === this.state.current)\r\n      return;\r\n    \r\n    const board = this.state.board; \r\n    var curMove = null;\r\n    const history = this.state.history;\r\n    for(var i = 0; i < history.length; i++){\r\n      if (history[i].step <= step){\r\n        history[i].char.highLight = false;\r\n        board[history[i].i][history[i].j] = history[i].char;\r\n      }\r\n      else\r\n        board[history[i].i][history[i].j] = {char: null, highLight: false};\r\n      if (history[i].step === step)\r\n        curMove = history[i]\r\n    }\r\n    const res = calculateWinner(board, curMove.i, curMove.j, curMove.char) \r\n    if (res != null)\r\n      {\r\n        \r\n        res.forEach(e => {\r\n          board[e.i][e.j].highLight = true;\r\n        });\r\n        this.setState({\r\n          ended: true, \r\n          board, \r\n          history,\r\n          current: step,\r\n          resultMessage: \"Winner: Player \" + curMove.char,\r\n        });\r\n      }\r\n    else{\r\n      if (step >= this.state.row * this.state.col){\r\n        this.setState({\r\n          ended: true, \r\n          board, \r\n          history,\r\n          current: step,\r\n          resultMessage: \"Draw game\"\r\n        });\r\n      }\r\n      else\r\n      {\r\n        \r\n        this.setState({\r\n          ended: false, \r\n          board, \r\n          history,\r\n          current: step,\r\n          resultMessage: \"\"\r\n        });\r\n      }\r\n    }\r\n      \r\n\r\n  }\r\n  sort(asc){\r\n  \r\n    var history = this.state.history;\r\n    history = history.sort((a, b) => {\r\n      if (asc)\r\n        return a.step - b.step;\r\n      return  b.step - a.step;\r\n    })\r\n  \r\n    //history = history.reverse();\r\n    this.setState({asc, history});\r\n  }\r\n  render() {\r\n    var curPlayer = \"\";\r\n    const moves = this.state.history.map((step, move) => {\r\n      const desc = step.step !== 0 ?\r\n        'Move to (' + step.i + ',' +step.j+ ')' :\r\n        'Go to game start';\r\n      const color = step.step === this.state.current ? 'red' : 'white' \r\n      if (step.step === this.state.current)\r\n        curPlayer = step.xIsNext ? 'X' : 'O';\r\n      return (\r\n        <div  style = {{display: 'flex', padding: \"5px\"}}>\r\n          <div style = {{width: '90px'}}>\r\n              {step.step !== 0 ? 'Step '+ step.step + '. ' : ''}\r\n            </div>\r\n          <div key={step.step} style = {{display: 'flex'}}>\r\n            <button style={{background: color, width: '150px', }} onClick={() => this.jumpTo(step.step)}>{desc}</button>\r\n          </div>\r\n        </div>\r\n        \r\n      );\r\n    });\r\n    return (\r\n      <div >\r\n        <div style={{marginBottom: '20px', fontSize: '20px', alignSelf:'center'}}>\r\n          Lý Duy Nam - 18127159 - BTCN01 - React tutorial\r\n        </div>\r\n        <div className=\"game\" >\r\n          <div className=\"game-board\">\r\n            <Board \r\n                board={this.state.board}\r\n                row={this.state.row} \r\n                col = {this.state.col}\r\n                onClick={(i, j) => this.handleClick(i, j)}\r\n            />\r\n          </div>\r\n          <div style={{display:'flex', justifyContent:'space-between'}}>\r\n            <div className=\"game-info\" >\r\n              <div>Next Player: {curPlayer}</div>\r\n              <div className=\"scroll-view\">{moves}</div>\r\n              <div style={{fontSize: '20px', fontWeight: 'bold'}}>{this.state.resultMessage}</div>\r\n            </div>\r\n            <div className=\"game-info\" >\r\n              <div>Sort the moves</div>\r\n              <div>\r\n                  <div>\r\n                    <input \r\n                      type=\"radio\" \r\n                      id=\"Ascending\" \r\n                      checked={this.state.asc} \r\n                      name=\"rad\" \r\n                      value=\"0\"\r\n                      onChange = {()=>{this.sort(true)}} />\r\n                    <label >Ascending </label>\r\n                  </div>\r\n                  <div>\r\n                    <input \r\n                      type=\"radio\" \r\n                      id=\"Descending\" \r\n                      checked={!this.state.asc} \r\n                      name=\"rad\" \r\n                      value=\"1\" \r\n                      onChange = {()=>{this.sort(false)}} />\r\n                    <label >Descending </label>\r\n                  </div>\r\n                  \r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}